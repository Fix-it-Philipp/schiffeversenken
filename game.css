*{
  margin:0;
  padding:0;
  box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: #eef;
  }

h1 {
    margin-top: 20px;
    margin-bottom: 20px;
  }
h2 {
  margin-bottom: 20px;
}
#controls {
    margin-bottom: 10px;
    background-color: #000000;
    align-items: center;
    margin: 20px;
  }

#grid {
    border-collapse: collapse;
    display: grid;
    grid-template-columns: repeat(10, 30px);
  }

.game-container {
    display: flex;
    justify-content: space-around;
    margin-top: 20px;
  }

.field{
    width: 330px;
    border: 2px solid #333;
    padding: 10px;
    justify-items: center;
    margin: 10px;
  }

.board {
    display: grid;
    border-collapse: collapse;
    grid-template-columns: repeat(10, 30px);
    /* grid-template-rows: repeat(10, 30px); */
    /* border: 2px solid #333; */
    padding: 10px;
    margin-left: 10px;
    margin-right: 10px;
  }

.cell {
    width: 30px;
    height: 30px;
    border: 1px solid #333;
    background-color: #2196F3; /* Wasser */
    cursor: pointer;
    text-align: left;
    vertical-align: middle;
    transition: width 3s;
    
  }
.cell.hit img{
    position: relative;
    max-width: 28px;
    height: 28px;
    /* z-index: 198; */
    object-fit: cover;
}
.cell.miss img{
    position: absolute;
    width: 28px;
    height: 28px;
    /* z-index: 198; */
}
.cell.occupied {
    background-color: #4CAF50; 
  }
.cell.blocked {
    background-color: #ff0000;
    z-index: 198;
  }
.cell img{
    position: absolute;
    cursor: default;
    max-width: 100%; 
    max-height: 100%;
  }
/* Chat */
.chat {
    width: 300px;
    border: 2px solid #333;
    margin: 10px;
    padding: 10px;
    display: grid;
    justify-content: baseline;
  }
.chatLog {
  height: 300px;
  vertical-align: top;
  align-self: flex-start;
  overflow-y: auto;
  box-sizing: border-box;
}
.chatControls {
  margin-top: "20px";
  margin-bottom: "20px";
    display: flex;
    align-self: flex-end;
  }

/* Elemente zum Draggen */
.ship {
    width: calc((30px * var(--size)));
    background-color: #2196F3;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: grab;
    user-select: none;
    margin: 15px;
}
.ship.horizontal{
  width: var(--size);
  height: 28px;
  margin:0px;
}
.ship.vertical{
  width: 28px;
  height: var(--size);
  margin:0px;
}
.ship.delete {
  cursor:unset;
}
.ship.disabled {
  background-color: #ff461c;
  cursor:not-allowed;
}

.dragelements{
  height: 160px;
  display: grid;
  grid-template-columns: 1fr 1fr;
  /* flex-direction: row; */
}

.popupOverlay{
  display:none; 
  position:fixed; 
  top:0; 
  left:0; 
  width:100%; 
  height:100%; 
  background:rgba(0,0,0,0.5); 
  justify-content:center; 
  align-items:center;
  z-index: 199;
}

/* From Uiverse.io by Smit-Prajapati */ 
.button {
  margin: 20px;
  /* in scss with just one variable i can change opacity with rgba(variable, opacity) but in css it's not possible so i have used three seperate variables */
  /* with hue-rotate color can be changed */
  --main-color: rgb(46, 213, 115);
  --main-bg-color: rgba(46, 213, 116, 0.36);
  --pattern-color: rgba(46, 213, 116, 0.073);

  /* change this rotation value */
  filter: hue-rotate(0deg);

  cursor: pointer;
  text-transform: uppercase;
  letter-spacing: 0.5rem;
  background: radial-gradient(
      circle,
      var(--main-bg-color) 0%,
      rgba(0, 0, 0, 0) 95%
    ),
    linear-gradient(var(--pattern-color) 1px, transparent 1px),
    linear-gradient(to right, var(--pattern-color) 1px, transparent 1px);
  background-size:
    cover,
    15px 15px,
    15px 15px;
  background-position:
    center center,
    center center,
    center center;
  border-image: radial-gradient(
      circle,
      var(--main-color) 0%,
      rgba(0, 0, 0, 0) 100%
    )
    1;
  border-width: 1px 0 1px 0;
  color: var(--main-color);
  padding: 1rem 3rem;
  font-weight: 700;
  font-size: 1.5rem;
  transition: background-size 0.2s ease-in-out;
}

.button:hover {
  background-size:
    cover,
    10px 10px,
    10px 10px;
}
.button:active {
  filter: hue-rotate(250deg);
}
